name: Deploy to GitHub Pages

# Credits go to Niels Swimberghe
# https://swimburger.net/blog/dotnet/how-to-deploy-aspnet-blazor-webassembly-to-github-pages

# Run workflow on every push to the master branch
on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  deploy-to-github-pages:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    steps:
    # uses GitHub's checkout action to checkout code form the master branch
    - uses: actions/checkout@v3
    
    # sets up .NET Core SDK
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3.2.0
      with:
        dotnet-version: 6.0

    # publishes Blazor project to the release-folder
    - name: Publish .NET Core Project
      run: dotnet publish gh-pages-blazor.csproj -c Release -o release --nologo
    
    # changes the base-tag in index.html from '/' to 'BlazorGitHubPagesDemo' to match GitHub Pages repository subdirectory
    - name: Change base-tag in index.html from / to gh-pages-blazor
      run: sed -i 's/<base href="\/" \/>/<base href="\/gh-pages-blazor\/" \/>/g' release/wwwroot/index.html
    
    # copy index.html to 404.html to serve the same file when a file is not found
    - name: copy index.html to 404.html
      run: cp release/wwwroot/index.html release/wwwroot/404.html

    # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
    - name: Add .nojekyll file
      run: touch release/wwwroot/.nojekyll
      
    - name: Copy wwwroot to gh-pages branch
      env:
        SRC_FOLDER_PATH: 'release/wwwroot'
        TARGET_BRANCH: 'gh-pages'
      run: |
        files=$(find $SRC_FOLDER_PATH -type f) # get the file list
        git config --global user.name 'GitHub Action'
        git config --global user.email 'action@github.com'
        git fetch                         # fetch branches
        git checkout $TARGET_BRANCH       # checkout to your branch
        git checkout ${GITHUB_REF##*/} -- $files # copy files from the source branch
        git add -A
        git diff-index --quiet HEAD ||  git commit -am "deploy files"  # commit to the repository (ignore if no modification)
        git push origin $TARGET_BRANCH # push to remote branch
